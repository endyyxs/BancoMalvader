CREATE DATABASE IF NOT EXISTS BANCOMALVADA;

USE BANCOMALVADA;

CREATE TABLE USUARIO (
    ID_USUARIO INT AUTO_INCREMENT NOT NULL,
    NOME VARCHAR(100) NOT NULL,
    CPF VARCHAR(11) NOT NULL UNIQUE,
    DATA_NASCIMENTO DATE NOT NULL,
    TELEFONE VARCHAR(15),
    TIPO_USUARIO ENUM('funcionario', 'cliente') DEFAULT 'cliente',
    SENHA VARCHAR(50) NOT NULL,
    PRIMARY KEY(ID_USUARIO)
);

CREATE TABLE FUNCIONARIO (
    ID_FUNCIONARIO INT AUTO_INCREMENT NOT NULL,
    CODIGO_FUNCIONARIO VARCHAR(20) NOT NULL UNIQUE,
    CARGO VARCHAR(50) NOT NULL,
    USUARIO_ID INT NOT NULL,
    CONSTRAINT FK_USUARIO_ID_FUNCIONARIO FOREIGN KEY (USUARIO_ID) REFERENCES USUARIO (ID_USUARIO),
    PRIMARY KEY (ID_FUNCIONARIO)
);

CREATE TABLE CLIENTE (
    ID_CLIENTE INT AUTO_INCREMENT NOT NULL,
    ID_USUARIO INT NOT NULL,
    CONSTRAINT FK_ID_USUARIO_CLIENTE FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO (ID_USUARIO),
    PRIMARY KEY (ID_CLIENTE)
);

CREATE TABLE ENDERECO (
    ID_ENDERECO INT AUTO_INCREMENT NOT NULL,
    CEP VARCHAR(10) NOT NULL,
    LOCAL VARCHAR(100),
    NUMERO_CASA INT,
    BAIRRO VARCHAR(50),
    CIDADE VARCHAR(50),
    ESTADO VARCHAR(2),
    USUARIO_ID INT NOT NULL,
    CONSTRAINT FK_USUARIO_ID_ENDERECO FOREIGN KEY (USUARIO_ID) REFERENCES USUARIO (ID_USUARIO),
    PRIMARY KEY (ID_ENDERECO)
);

CREATE TABLE CONTA (
    ID_CONTA INT AUTO_INCREMENT NOT NULL,
    NUMERO_CONTA VARCHAR(20) NOT NULL,
    AGENCIA VARCHAR(20) NOT NULL,
    SALDO DECIMAL (15, 2),
    TIPO_CONTA ENUM('poupanca', 'corrente'),
    ID_CLIENTE INT NOT NULL,
    CONSTRAINT FK_ID_CLIENTE_CONTA FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE (ID_CLIENTE),
    PRIMARY KEY (ID_CONTA)
);

CREATE TABLE CONTA_CORRENTE (
    ID_CONTA_CORRENTE INT AUTO_INCREMENT NOT NULL,
    LIMITE DECIMAL(15, 2),
    DATA_VENCIMENTO DATE NOT NULL,
    ID_CONTA INT NOT NULL,
    CONSTRAINT FK_ID_CONTA_CONTA_CORRENTE FOREIGN KEY (ID_CONTA) REFERENCES CONTA (ID_CONTA),
    PRIMARY KEY (ID_CONTA_CORRENTE)
);

CREATE TABLE CONTA_POUPANCA (
    ID_CONTA_POUPANCA INT AUTO_INCREMENT NOT NULL,
    TAXA_RENDIMENTO DECIMAL(5, 2),
    ID_CONTA INT NOT NULL,
    CONSTRAINT FK_ID_CONTA_CONTA_POUPANCA FOREIGN KEY (ID_CONTA) REFERENCES CONTA (ID_CONTA),
    PRIMARY KEY (ID_CONTA_POUPANCA)
);

CREATE TABLE TRANSACAO (
    ID_TRANSACAO INT AUTO_INCREMENT NOT NULL,
    TIPO_TRANSACAO ENUM('deposito', 'saque', 'transferencia'),
    VALOR DECIMAL(15, 2),
    DATA_HORA TIMESTAMP NOT NULL,
    CONTA_ID INT NOT NULL,
    CONSTRAINT FK_CONTA_ID_TRANSACAO FOREIGN KEY (CONTA_ID) REFERENCES CONTA (ID_CONTA),
    PRIMARY KEY (ID_TRANSACAO)
);

CREATE TABLE RELATORIO (
    ID_RELATORIO INT AUTO_INCREMENT NOT NULL,
    TIPO_RELATORIO VARCHAR(50) NOT NULL,
    DATA_GERACAO TIMESTAMP NOT NULL,
    CONTEUDO TEXT,
    FUNCIONARIO_ID INT NOT NULL,
    CONSTRAINT FK_FUNCIONARIO_ID_RELATORIO FOREIGN KEY (FUNCIONARIO_ID) REFERENCES FUNCIONARIO (ID_FUNCIONARIO),
    PRIMARY KEY (ID_RELATORIO)
);

DELIMITER $$

CREATE TRIGGER SALVAR_DEPOSITO 
AFTER UPDATE ON CONTA FOR EACH ROW
BEGIN
    IF NEW.SALDO > OND.SALDO THEN
        INSERT INTO TRANSACOES (
            ID_CONTA,
            TIPO,
            VALOR
        ) VALUES (
            NEW.ID_CONTA,
            'deposito',
            NEW.SALDO - NEW.SALDO
        );
    END IF;
END $$ DELIMITER;

DELIMITER $$ 

CREATE TRIGGER SALVAR_SAQUE 
AFTER UPDATE ON CONTA 
FOR EACH ROW 
BEGIN IF NEW.SALDO < OLD.SALDO THEN INSERT INTO TRANSACOES (
    ID_CONTA,
    TIPO,
    VALOR
) VALUES (
    NEW.ID_CONTA,
    'saque',
    OLD.SALDO - NEW.SALDO
);
END IF;
END $$ DELIMITER ;